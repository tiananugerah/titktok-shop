version: '3.8'

services:
  tiktok-gateway:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - TIKTOK_APP_KEY=${TIKTOK_APP_KEY}
      - TIKTOK_APP_SECRET=${TIKTOK_APP_SECRET}
      - TIKTOK_ACCESS_TOKEN=${TIKTOK_ACCESS_TOKEN}
      - TIKTOK_BASE_PATH=${TIKTOK_BASE_PATH:-https://open-api.tiktokglobalshop.com}
      - TIKTOK_SANDBOX=${TIKTOK_SANDBOX:-false}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
      - CORS_CREDENTIALS=${CORS_CREDENTIALS:-true} 
      - LOG_LEVEL=${LOG_LEVEL:-info}
      # redis connection
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - tiktok-gateway
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
