import { Product202309GetProductResponseDataAudit } from './GetProductResponseDataAudit';
import { Product202309GetProductResponseDataAuditFailedReasons } from './GetProductResponseDataAuditFailedReasons';
import { Product202309GetProductResponseDataBrand } from './GetProductResponseDataBrand';
import { Product202309GetProductResponseDataCategoryChains } from './GetProductResponseDataCategoryChains';
import { Product202309GetProductResponseDataCertifications } from './GetProductResponseDataCertifications';
import { Product202309GetProductResponseDataDeliveryOptions } from './GetProductResponseDataDeliveryOptions';
import { Product202309GetProductResponseDataGlobalProductAssociation } from './GetProductResponseDataGlobalProductAssociation';
import { Product202309GetProductResponseDataIntegratedPlatformStatuses } from './GetProductResponseDataIntegratedPlatformStatuses';
import { Product202309GetProductResponseDataMainImages } from './GetProductResponseDataMainImages';
import { Product202309GetProductResponseDataPackageDimensions } from './GetProductResponseDataPackageDimensions';
import { Product202309GetProductResponseDataPackageWeight } from './GetProductResponseDataPackageWeight';
import { Product202309GetProductResponseDataPrescriptionRequirement } from './GetProductResponseDataPrescriptionRequirement';
import { Product202309GetProductResponseDataProductAttributes } from './GetProductResponseDataProductAttributes';
import { Product202309GetProductResponseDataProductFamilies } from './GetProductResponseDataProductFamilies';
import { Product202309GetProductResponseDataRecommendedCategories } from './GetProductResponseDataRecommendedCategories';
import { Product202309GetProductResponseDataSizeChart } from './GetProductResponseDataSizeChart';
import { Product202309GetProductResponseDataSkus } from './GetProductResponseDataSkus';
import { Product202309GetProductResponseDataSubscribeInfo } from './GetProductResponseDataSubscribeInfo';
import { Product202309GetProductResponseDataVideo } from './GetProductResponseDataVideo';
export declare class Product202309GetProductResponseData {
    'audit'?: Product202309GetProductResponseDataAudit;
    'auditFailedReasons'?: Array<Product202309GetProductResponseDataAuditFailedReasons>;
    'brand'?: Product202309GetProductResponseDataBrand;
    'categoryChains'?: Array<Product202309GetProductResponseDataCategoryChains>;
    'certifications'?: Array<Product202309GetProductResponseDataCertifications>;
    'createTime'?: number;
    'deliveryOptions'?: Array<Product202309GetProductResponseDataDeliveryOptions>;
    'description'?: string;
    'externalProductId'?: string;
    'globalProductAssociation'?: Product202309GetProductResponseDataGlobalProductAssociation;
    'hasDraft'?: boolean;
    'id'?: string;
    'integratedPlatformStatuses'?: Array<Product202309GetProductResponseDataIntegratedPlatformStatuses>;
    'isCodAllowed'?: boolean;
    'isNotForSale'?: boolean;
    'isPreOwned'?: boolean;
    'isReplicated'?: boolean;
    'listingQualityTier'?: string;
    'mainImages'?: Array<Product202309GetProductResponseDataMainImages>;
    'manufacturerIds'?: Array<string>;
    'minimumOrderQuantity'?: number;
    'packageDimensions'?: Product202309GetProductResponseDataPackageDimensions;
    'packageWeight'?: Product202309GetProductResponseDataPackageWeight;
    'prescriptionRequirement'?: Product202309GetProductResponseDataPrescriptionRequirement;
    'primaryCombinedProductId'?: string;
    'productAttributes'?: Array<Product202309GetProductResponseDataProductAttributes>;
    'productFamilies'?: Array<Product202309GetProductResponseDataProductFamilies>;
    'productStatus'?: string;
    'productTypes'?: Array<string>;
    'recommendedCategories'?: Array<Product202309GetProductResponseDataRecommendedCategories>;
    'responsiblePersonIds'?: Array<string>;
    'shippingInsuranceRequirement'?: string;
    'sizeChart'?: Product202309GetProductResponseDataSizeChart;
    'skus'?: Array<Product202309GetProductResponseDataSkus>;
    'status'?: string;
    'subscribeInfo'?: Product202309GetProductResponseDataSubscribeInfo;
    'title'?: string;
    'updateTime'?: number;
    'video'?: Product202309GetProductResponseDataVideo;
    static discriminator: string | undefined;
    static attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
    }[];
}
//# sourceMappingURL=GetProductResponseData.d.ts.map